})
}
#points(coords$x, coords$y)
# symbols(coords$x, coords$y,
#         circles=rep(scaling* (1/2-gap), nrow(coords)),
#         inches=F, add=T, ...)
draw.circle(coords$x, coords$y,
radius = scaling* (1/2-gap), nrow(coords),
...)
#add letter
lett <- coords[add_letter, ]
if(nrow(lett) > 0) {
text(lett$x, lett$y, labels=lett$seq, cex=cex_letter, col=col_letter)
}
#return(coords)
}
#par(fin=c(5,5))
plot(0, 0, asp=1, xlim=c(0, 1), ylim=c(0,1), main= paste(par(what), collapse = " "))
addToPlot(0,0, coords, main_con=T, xspan = 1)
#par(fin=c(5,5))
plot(0, 0, asp=1, xlim=c(0, 1), ylim=c(0,1), main= paste(par(what), collapse = " "))
draw.circle(0.5, 0., 1
)
draw.circle(0.5, 0., 0.1)
draw.circle(0.5, 0.5, 0.1)
draw.circle(0.5, 0.7, 0.1)
#par(fin=c(5,5))
plot(0, 0, asp=1, xlim=c(0, 1), ylim=c(0,1), main= paste(par(what), collapse = " "))
draw.circle(c(0.5,0.5), c(0.7, 0.5), 0.1)
addToPlot <- function(x=0, y=0, coords,
xspan=1, rot = NA, gap=0.05,
main_con=NA, side_con=NA,
add_letter=F, cex_letter=par("cex"), col_letter="black",
...){
#rotate
if(!is.na(rot)){
midx <- mean(coords$x)
midy <- mean(coords$y)
dist <- sqrt(coords$x^2 + coords$y^2)
angle <- atan2(coords$y, coords$x) + rot
coords$y <- midy + sin(angle) * dist
coords$x <- midx + cos(angle) * dist
}
#align
coords$x <- (coords$x - min(coords$x))
coords$y <- (coords$y - min(coords$y))
#rescale
scaling=1
if(!is.na(xspan)){
#compute scaling factor
scaling = xspan/(max(coords$x) - min(coords$x))
coords$x <- coords$x * scaling
coords$y <- coords$y * scaling
}
#realign
coords$x <- x + coords$x
coords$y <- y + coords$y
#connector lines
if(!is.na(main_con)){
if(is.logical(main_con)) if(main_con) main_con <- list(lwd=1, lty=1, col="black")
with(main_con, {
#points(coords$x, coords$y, type="c", col=col, lwd=lwd, lty=lty)
segments(coords[1:(nrow(coords)-1),"x"],
coords[1:(nrow(coords)-1),"y"],
coords[2:nrow(coords),"x"],
coords[2:nrow(coords),"y"],
col=col, lwd=lwd, lty=lty)
})
}
if(!is.na(side_con)){
if(is.logical(side_con)) if(side_con) side_con <- list(lwd=1, lty=1, col="black")
with(side_con, {
segs <- data.frame()
for(base in 1:nrow(coords)){
if(coords[base, "bound"] > 0 & base < coords[base, "bound"]){
segs <- rbind(segs, data.frame(
x0=coords[base, "x"],
y0=coords[base, "y"],
x1=coords[coords[base, "bound"], "x"],
y1=coords[coords[base, "bound"], "y"]  ))
}
}
segments(segs$x0, segs$y0, segs$x1, segs$y1, lwd=lwd, col=col, lty=lty)
})
}
#points(coords$x, coords$y)
# symbols(coords$x, coords$y,
#         circles=rep(scaling* (1/2-gap), nrow(coords)),
#         inches=F, add=T, ...)
for(ci in 1:nrow(coords) ) draw.circle(coords$x[ci], coords$y[ci],
radius = scaling* (1/2-gap), nrow(coords),
...)
#add letter
lett <- coords[add_letter, ]
if(nrow(lett) > 0) {
text(lett$x, lett$y, labels=lett$seq, cex=cex_letter, col=col_letter)
}
#return(coords)
}
#par(fin=c(5,5))
plot(0, 0, asp=1, xlim=c(0, 1), ylim=c(0,1), main= paste(par(what), collapse = " "))
addToPlot(0,0, coords, main_con=T, xspan = 1)
plot_grid(as.ggplot(function(x){
#par(mgp=c(3,1,0))
plot(0, 0, asp=1, xlim=c(0, 1), ylim=c(0,1), main= paste(par(what), collapse = " ") )
#plot.new()
#plot.window(asp=1, ylim=c(0,1), xlim=c(0, 1))
addToPlot(0,0, coords, main_con=T, xspan = 1)
#}), scale=1.2)
}, scale=1))
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=0.75)
addToPlot <- function(x=0, y=0, coords,
xspan=1, rot = NA, gap=0.05,
main_con=NA, side_con=NA,
add_letter=F, cex_letter=par("cex"), col_letter="black", col=NA,
...){
#rotate
if(!is.na(rot)){
midx <- mean(coords$x)
midy <- mean(coords$y)
dist <- sqrt(coords$x^2 + coords$y^2)
angle <- atan2(coords$y, coords$x) + rot
coords$y <- midy + sin(angle) * dist
coords$x <- midx + cos(angle) * dist
}
#align
coords$x <- (coords$x - min(coords$x))
coords$y <- (coords$y - min(coords$y))
#rescale
scaling=1
if(!is.na(xspan)){
#compute scaling factor
scaling = xspan/(max(coords$x) - min(coords$x))
coords$x <- coords$x * scaling
coords$y <- coords$y * scaling
}
#realign
coords$x <- x + coords$x
coords$y <- y + coords$y
#connector lines
if(!is.na(main_con)){
if(is.logical(main_con)) if(main_con) main_con <- list(lwd=1, lty=1, col="black")
with(main_con, {
#points(coords$x, coords$y, type="c", col=col, lwd=lwd, lty=lty)
segments(coords[1:(nrow(coords)-1),"x"],
coords[1:(nrow(coords)-1),"y"],
coords[2:nrow(coords),"x"],
coords[2:nrow(coords),"y"],
col=col, lwd=lwd, lty=lty)
})
}
if(!is.na(side_con)){
if(is.logical(side_con)) if(side_con) side_con <- list(lwd=1, lty=1, col="black")
with(side_con, {
segs <- data.frame()
for(base in 1:nrow(coords)){
if(coords[base, "bound"] > 0 & base < coords[base, "bound"]){
segs <- rbind(segs, data.frame(
x0=coords[base, "x"],
y0=coords[base, "y"],
x1=coords[coords[base, "bound"], "x"],
y1=coords[coords[base, "bound"], "y"]  ))
}
}
segments(segs$x0, segs$y0, segs$x1, segs$y1, lwd=lwd, col=col, lty=lty)
})
}
#points(coords$x, coords$y)
# symbols(coords$x, coords$y,
#         circles=rep(scaling* (1/2-gap), nrow(coords)),
#         inches=F, add=T, ...)
if(is.na(col)){
cols <- rep("transparent", nrow(coords))
} else {
cols <- col
}
for(ci in 1:nrow(coords) ) draw.circle(coords$x[ci], coords$y[ci],
radius = scaling* (1/2-gap), nrow(coords),
col=cols[ci],
...)
#add letter
lett <- coords[add_letter, ]
if(nrow(lett) > 0) {
text(lett$x, lett$y, labels=lett$seq, cex=cex_letter, col=col_letter)
}
#return(coords)
}
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=0.75)
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=1)
addToPlot <- function(x=0, y=0, coords,
xspan=1, rot = NA, gap=0.05,
main_con=NA, side_con=NA,
add_letter=F, cex_letter=par("cex"), col_letter="black", col=NULL,
...){
#rotate
if(!is.na(rot)){
midx <- mean(coords$x)
midy <- mean(coords$y)
dist <- sqrt(coords$x^2 + coords$y^2)
angle <- atan2(coords$y, coords$x) + rot
coords$y <- midy + sin(angle) * dist
coords$x <- midx + cos(angle) * dist
}
#align
coords$x <- (coords$x - min(coords$x))
coords$y <- (coords$y - min(coords$y))
#rescale
scaling=1
if(!is.na(xspan)){
#compute scaling factor
scaling = xspan/(max(coords$x) - min(coords$x))
coords$x <- coords$x * scaling
coords$y <- coords$y * scaling
}
#realign
coords$x <- x + coords$x
coords$y <- y + coords$y
#connector lines
if(!is.na(main_con)){
if(is.logical(main_con)) if(main_con) main_con <- list(lwd=1, lty=1, col="black")
with(main_con, {
#points(coords$x, coords$y, type="c", col=col, lwd=lwd, lty=lty)
segments(coords[1:(nrow(coords)-1),"x"],
coords[1:(nrow(coords)-1),"y"],
coords[2:nrow(coords),"x"],
coords[2:nrow(coords),"y"],
col=col, lwd=lwd, lty=lty)
})
}
if(!is.na(side_con)){
if(is.logical(side_con)) if(side_con) side_con <- list(lwd=1, lty=1, col="black")
with(side_con, {
segs <- data.frame()
for(base in 1:nrow(coords)){
if(coords[base, "bound"] > 0 & base < coords[base, "bound"]){
segs <- rbind(segs, data.frame(
x0=coords[base, "x"],
y0=coords[base, "y"],
x1=coords[coords[base, "bound"], "x"],
y1=coords[coords[base, "bound"], "y"]  ))
}
}
segments(segs$x0, segs$y0, segs$x1, segs$y1, lwd=lwd, col=col, lty=lty)
})
}
#points(coords$x, coords$y)
# symbols(coords$x, coords$y,
#         circles=rep(scaling* (1/2-gap), nrow(coords)),
#         inches=F, add=T, ...)
if(is.na(col)){
cols <- rep("transparent", nrow(coords))
} else {
cols <- col
}
for(ci in 1:nrow(coords) ) draw.circle(coords$x[ci], coords$y[ci],
radius = scaling* (1/2-gap), nrow(coords),
col=cols[ci],
...)
#add letter
lett <- coords[add_letter, ]
if(nrow(lett) > 0) {
text(lett$x, lett$y, labels=lett$seq, cex=cex_letter, col=col_letter)
}
#return(coords)
}
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=1)
addToPlot <- function(x=0, y=0, coords,
xspan=1, rot = NA, gap=0.05,
main_con=NA, side_con=NA,
add_letter=F, cex_letter=par("cex"), col_letter="black", col=NULL,
...){
#rotate
if(!is.na(rot)){
midx <- mean(coords$x)
midy <- mean(coords$y)
dist <- sqrt(coords$x^2 + coords$y^2)
angle <- atan2(coords$y, coords$x) + rot
coords$y <- midy + sin(angle) * dist
coords$x <- midx + cos(angle) * dist
}
#align
coords$x <- (coords$x - min(coords$x))
coords$y <- (coords$y - min(coords$y))
#rescale
scaling=1
if(!is.na(xspan)){
#compute scaling factor
scaling = xspan/(max(coords$x) - min(coords$x))
coords$x <- coords$x * scaling
coords$y <- coords$y * scaling
}
#realign
coords$x <- x + coords$x
coords$y <- y + coords$y
#connector lines
if(!is.na(main_con)){
if(is.logical(main_con)) if(main_con) main_con <- list(lwd=1, lty=1, col="black")
with(main_con, {
#points(coords$x, coords$y, type="c", col=col, lwd=lwd, lty=lty)
segments(coords[1:(nrow(coords)-1),"x"],
coords[1:(nrow(coords)-1),"y"],
coords[2:nrow(coords),"x"],
coords[2:nrow(coords),"y"],
col=col, lwd=lwd, lty=lty)
})
}
if(!is.na(side_con)){
if(is.logical(side_con)) if(side_con) side_con <- list(lwd=1, lty=1, col="black")
with(side_con, {
segs <- data.frame()
for(base in 1:nrow(coords)){
if(coords[base, "bound"] > 0 & base < coords[base, "bound"]){
segs <- rbind(segs, data.frame(
x0=coords[base, "x"],
y0=coords[base, "y"],
x1=coords[coords[base, "bound"], "x"],
y1=coords[coords[base, "bound"], "y"]  ))
}
}
segments(segs$x0, segs$y0, segs$x1, segs$y1, lwd=lwd, col=col, lty=lty)
})
}
#points(coords$x, coords$y)
# symbols(coords$x, coords$y,
#         circles=rep(scaling* (1/2-gap), nrow(coords)),
#         inches=F, add=T, ...)
if(is.null(col)){
cols <- rep("transparent", nrow(coords))
} else {
cols <- col
}
for(ci in 1:nrow(coords) ) draw.circle(coords$x[ci], coords$y[ci],
radius = scaling* (1/2-gap), nrow(coords),
col=cols[ci],
...)
#add letter
lett <- coords[add_letter, ]
if(nrow(lett) > 0) {
text(lett$x, lett$y, labels=lett$seq, cex=cex_letter, col=col_letter)
}
#return(coords)
}
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=1)
tulplots <- list(
ggplot(data=poolfile, aes(x=1, y=mfe)) +
geom_violin(width=1)+
stat_summary(fun=mean, geom="point")+
coord_cartesian(ylim = c(0, -30))+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
,
ggplot(data=poolfile, aes(x=1, y=Pfold)) +
geom_violin(width=1)+
stat_summary(fun=mean, geom="point")+
coord_cartesian(ylim = c(0, 1))+
scale_y_continuous(breaks=c(0,1), labels = c("0%", "100%"))+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
,
ggplot(data=poolfile, aes(x=1, y=Pdeg)) +
geom_violin(width=1)+
stat_summary(fun=mean, geom="point")+
scale_y_continuous(breaks=c(0,1), labels = c("0%", "100%"))+
coord_cartesian(ylim = c(0, 1))+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
,
ggplot(poolfile, aes(x=1, y=R)) +
geom_violin(width=1)+
stat_summary(fun=mean, geom="point")+
coord_cartesian(ylim = c(0, Rmax))+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
,
ggplot(data=poolfile, aes(x=1, y=length)) +
geom_violin(width=1)+
stat_summary(fun=mean, geom="point")+
coord_cartesian(ylim = c(0, lmax))+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none")
,
ggplot(data=data.frame(n= nrow(poolfile) ), aes(y=n, x=1)) +
geom_bar(stat = "identity")+
theme(axis.title.x = element_blank(),
axis.text.x=element_blank(),
axis.ticks = element_blank(),
legend.position = "none") +
coord_cartesian(ylim=c(0, all))+
scale_y_continuous(breaks = c(0, all),
labels = c("0%", "100%"))
,
as.ggplot(~{
plot.new()
plot.window(asp=1, xlim=c(0,1), ylim=c(0,1), xpd=NA)
addToPlot(0,0,coords,
xspan=1,
border="lightblue",
#bases
add_letter = seqrule,
cex_letter = 0.5,
col_letter = "red",
#fill
col=colormask,
#rotate it
#rot=pi/2,
#connecting lines
main_con = T
#, side_con = list(lwd=1, col="red", lty=1)
)
}, scale=1)
)
plot_grid(plotlist=tulplots, ncol=1, align="v")
